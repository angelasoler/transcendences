services:
  db:
    container_name: "transcendence_db"
    build: ./postgres
    image: transcendence/postgres:latest
    volumes:
      - ./postgres/data:/var/lib/postgresql/data/
  redis:
    container_name: "transcendence_redis"
    build: ./redis
    image: transcendence/redis:latest
    ports:
      - "6379:6379"
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "transcendence_web"
    image: transcendence/web:latest
    env_file: env.development
    volumes:
      - ./transcendences:/app
      - ./static:/app/staticfiles #dev env
      - ./requirements.txt:/app/requirements.txt

    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - ngrok

  ngrok:
      build:
        context: .
        dockerfile: Dockerfile.ngrok
      environment:
        - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      ports:
        - "4040:4040"  
      networks:
        - default
      restart: unless-stopped
  test:
    build:
      context: .
      dockerfile: Dockerfile_test
    container_name: "transcendence_web_test"
    env_file: env.test
    image: transcendenceTest/web:latest
    command: python -m venv env  
    volumes:
      - ./transcendences:/app
      - ./static:/app/staticfiles #dev env
      - ./requirements.txt:/app/requirements.txt 
    depends_on:
      - db
      - redis
volumes:
  postgres_data:
